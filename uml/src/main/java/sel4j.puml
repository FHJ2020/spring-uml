@startuml
'https://plantuml.com/class-diagram

note as n1
[[https://www.slf4j.org/manual.html sel4j官网]]

日志框架要实现  slf4j-api 下的接口

end note
namespace sel4j {


    class LoggerFactory {
        + static Logger getLogger(Class<?> clazz)
    }
    note top of LoggerFactory
    getLogger时,
    查找LoggerFactoryBinder的实现类 StaticLoggerBinder,
    查找class文件org/slf4j/impl/StaticLoggerBinder.class,
    各日志框架的实现类名只能是这个,并且包名也要一致
    如果存在多个会进行异常输出

    调用 StaticLoggerBinder.getSingleton() 方法让classLoader随机选择一个子类,
    如果有多个binder必须进行jar包的排除

    调用LoggerFactoryBinder.getLoggerFactory()
    获得实际的loggerFactory

    end note

    interface Logger

    interface ILoggerFactory {
    }
    interface LoggerFactoryBinder {
        public ILoggerFactory getLoggerFactory();
        public String getLoggerFactoryClassStr();
    }

    LoggerFactory -d[hidden]- ILoggerFactory
    ILoggerFactory -d[hidden]- Logger
    Logger -d[hidden]- LoggerFactoryBinder

}
log4j2 -[hidden]- sel4j
sel4j -u[hidden]- logback

namespace log4j2 {
    interface LoggerContextShutdownAware
    interface LoggerAdapter
    abstract class AbstractLoggerAdapter implements LoggerAdapter, LoggerContextShutdownAware
    class StaticLoggerBinder implements sel4j.LoggerFactoryBinder
    class Log4jLoggerFactory extends AbstractLoggerAdapter implements sel4j.ILoggerFactory
}

namespace logback {
    class LoggerContext extends ContextBase implements sel4j.ILoggerFactory, LifeCycle
    class StaticLoggerBinder implements sel4j.LoggerFactoryBinder
}


@enduml