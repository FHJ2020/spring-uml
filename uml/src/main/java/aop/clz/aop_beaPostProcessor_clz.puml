@startuml
'https://plantuml.com/activity-diagram-beta


interface AopInfrastructureBean
note top
标记接口,所有标记这个接口的类,Spring
不会使用自动代理,即使pointcut匹配
end note

class ProxyProcessorSupport extends ProxyConfig implements Ordered, AopInfrastructureBean
abstract class AbstractAutoProxyCreator extends ProxyProcessorSupport implements SmartInstantiationAwareBeanPostProcessor
abstract class AbstractAdvisorAutoProxyCreator extends AbstractAutoProxyCreator {
    - Map<Object, Class<?>> proxyTypes
    - Map<Object, Boolean> advisedBeans
}
note right of AbstractAdvisorAutoProxyCreator
**advisedBeans**bean创建时会判断,然后缓存结果
key:beanName
value:是否需要进行代理
===
**advisedBeans**
key:beanName
value:代理类的class对象

end note

package beanPostProcessor {



    class InfrastructureAdvisorAutoProxyCreator extends AbstractAdvisorAutoProxyCreator
    class AspectJAwareAdvisorAutoProxyCreator extends AbstractAdvisorAutoProxyCreator
    class AnnotationAwareAspectJAutoProxyCreator extends AspectJAwareAdvisorAutoProxyCreator
}
note top of beanPostProcessor
AopConfigUtils.APC_PRIORITY_LIST 保存了3个类的优先级,以索引顺序作为优先级,越大优先级越高
    APC_PRIORITY_LIST.add(InfrastructureAdvisorAutoProxyCreator.class);
    APC_PRIORITY_LIST.add(AspectJAwareAdvisorAutoProxyCreator.class);
    APC_PRIORITY_LIST.add(AnnotationAwareAspectJAutoProxyCreator.class);
注册时会判断是否已经存在该类型的beanPostProcessor,
如果存在继续判断优先级,如果比原来的高,则修改beanDefinition的beanClass
为当前的beanPostProcessor
end note

@enduml
