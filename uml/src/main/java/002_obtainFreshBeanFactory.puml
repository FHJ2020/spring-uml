@startuml

(*) --> refresh()
partition refresh() {
    -d-> prepareRefresh
    -d-> obtainFreshBeanFactory
    -d-> "..."
    -d-> finishRefresh();
}



obtainFreshBeanFactory -r-> obtainFreshBeanFactory()

partition obtainFreshBeanFactory() {
    -r-> ==1==
    -d-> "AbstractRefreshableApplicationContext.refreshBeanFactory()"
    -d-> "销毁原来的 bean 和 beanFactory"
    --> "创建新的 beanFactory
        DefaultListableBeanFactory beanFactory = createBeanFactory();
        beanFactory.setSerializationId(getId());
        设置beanFactory beanDefinition是否允许覆盖,是否允许循环引用
        loadBeanDefinitions(beanFactory);
        this.beanFactory = beanFactory;"
    -d-> "返回 refreshBeanFactory中创建的beanFactory"
    --> ==2==

    ==1== -->"GenericApplicationContext.refreshBeanFactory()"
    --> "只允许刷新一次,如果已经刷新过容器,抛出 IllegalStateException 异常 "
    --> "使用new Context 时的 beanFactory.setSerializationId
        并返回"
    --> ==2==
}

@enduml

