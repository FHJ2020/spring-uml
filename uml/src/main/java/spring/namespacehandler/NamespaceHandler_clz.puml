@startuml

title scaner处理类上注解,BeanFactoryPostProcessor处理属性、方法、字段注解





'ClassPathBeanDefinitionScanner::beanNameGenerator ------> BeanNameGenerator #red
'ClassPathBeanDefinitionScanner::scopeMetadataResolver ----> ScopeMetadataResolver #blue

'====================================scope
enum ScopedProxyMode{
    + DEFAULT
	+ NO
	+ INTERFACES
    + TARGET_CLASS
}
class ScopeMetadata {
	- String scopeName = BeanDefinition.SCOPE_SINGLETON;
	- ScopedProxyMode scopedProxyMode = ScopedProxyMode.NO;
}
interface ScopeMetadataResolver{
    + ScopeMetadata resolveScopeMetadata(BeanDefinition definition)
}
ScopeMetadataResolver::resolveScopeMetadata --> ScopeMetadata

class Jsr330ScopeMetadataResolver implements ScopeMetadataResolver
class AnnotationScopeMetadataResolver implements ScopeMetadataResolver{
    - ScopedProxyMode defaultProxyMode
	+ Class<? extends Annotation> scopeAnnotationType = Scope.class;
}
AnnotationScopeMetadataResolver::defaultProxyMode -- ScopedProxyMode




interface BeanNameGenerator {
    + String generateBeanName(BeanDefinition definition, BeanDefinitionRegistry registry)
}
class DefaultBeanNameGenerator implements BeanNameGenerator
note bottom of DefaultBeanNameGenerator
xml
end note
class AnnotationBeanNameGenerator implements BeanNameGenerator
note bottom of AnnotationBeanNameGenerator
@Component
end note
class FullyQualifiedAnnotationBeanNameGenerator extends AnnotationBeanNameGenerator





abstract class AbstractTypeHierarchyTraversingFilter implements TypeFilter
class AnnotationTypeFilter extends AbstractTypeHierarchyTraversingFilter




@enduml